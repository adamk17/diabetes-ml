name: CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  python-lint:
    name: Python lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Format check with black
      run: black --check api
    
    - name: Import sorting with isort
      run: isort --check-only api
    
    - name: Lint with flake8
      run: flake8 api --max-line-length=100 --count --statistics
    


  terraform-validate:
    name: Terraform validate and plan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '~1.11'
    
    - name: Terraform Format Check
      run: terraform -chdir=terraform fmt -check
    
    - name: Terraform Init
      run: terraform -chdir=terraform init
    
    - name: Terraform Validate
      run: terraform -chdir=terraform validate
    
    - name: Terraform Plan
      run: terraform -chdir=terraform plan -no-color
      continue-on-error: true

  helm-lint:
    name: Helm lint and template
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'
    
    - name: Lint Helm chart
      run: helm lint helm
    
    - name: Template Helm chart
      run: helm template test-release helm --debug

  security-scan:
    name: Security scanning
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'